name: Python Selenium Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Necesario para commitear docs/ a main
permissions:
  contents: write

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0   # para poder commitear en la misma rama

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # Chrome estable. Selenium Manager resolverá el driver.
    - name: Install Google Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y wget gpg
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor -o /usr/share/keyrings/google-linux-signing-keyring.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-linux-signing-keyring.gpg] https://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        google-chrome --version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # Asegura que el plugin de Allure esté instalado en tu requirements.txt: allure-pytest
        python - <<'PY'
        import selenium, sys
        print('Selenium', selenium.__version__)
        print(sys.version)
        PY

    # Allure CLI necesita Java
    - name: Set up Java (for Allure)
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: '17'

    # Ejecuta solo tu test de login (ajusta la ruta/nombre si aplica)
    - name: Run tests
      env:
        CI: "true"
      run: |
        pytest tests/test_pom_logins.py -v --alluredir=results

    - name: Upload Allure results (artifact)
      uses: actions/upload-artifact@v4
      with:
        name: allure-results
        path: results
        if-no-files-found: warn

    # ---- Generar Allure estático ----
    - name: Set up Node (for Allure CLI)
      uses: actions/setup-node@v4
      with:
        node-version: "20"

    - name: Install Allure Commandline
      run: npm i -g allure-commandline

    - name: Generate Allure report
      run: |
        allure generate results -o reports --clean
        test -f reports/index.html

    # ---- Publicar en Pages con Deploy from a branch -> main / docs ----
    - name: Prepare docs/
      run: |
        rm -rf docs
        mkdir -p docs
        cp -R reports/* docs/
        touch docs/.nojekyll

    - name: Commit docs/ to main
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "chore: publish Allure report to docs/"
        branch: main
        file_pattern: docs/**
