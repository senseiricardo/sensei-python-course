name: Python Selenium Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Google Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y wget gpg
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo gpg --dearmor -o /usr/share/keyrings/google-linux-signing-keyring.gpg
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-linux-signing-keyring.gpg] https://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        google-chrome --version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python -c "import selenium, sys; print('Selenium', selenium.__version__); print(sys.version)"

    # Si tus tests NO fuerzan headless desde el código, puedes usar Xvfb:
    # - name: Run tests (xvfb)
    #   run: xvfb-run -a pytest -v --alluredir=results

    # Si ya pones headless en el código (recomendado), corre directo:
    - name: Run tests
      env:
        CI: "true"
      run: |
        pytest tests/test_pom_logins.py -v --alluredir=results

    - name: Upload Allure results
      uses: actions/upload-artifact@v4
      with:
        name: allure-results
        path: results
        if-no-files-found: warn
